html {
  box-sizing: border-box;
}

*,
*::before,
*::after {
  box-sizing: inherit;
  margin: 0;
  padding: 0;
  overflow-x: hidden;
}



a {
  text-decoration: none;
}

li {
  list-style: none;
}

.header {
  display: flex;
  width: 100vw;
  justify-content: space-around;
  align-items: center;
  background-color: rgba(10, 44, 239, 0.9);
  margin-bottom: 1rem;
  padding: 1rem;
  color: #fff;
}

.header a {
  color: #fff;
}

/* Flexbox es un sistema bidimensional solo podremos tener filas o columnas. */

.container {
  background-color: #333;
  height: 400px;
  width: 100%;

  display: flex; /* Los elementos se alinean en fila por defecto, aquí trabajarián en bloque */
  display: inline-flex; /* Aquí solo ocuparián el tamaño de su contenido, trabajarián en línea. */
  display: flex;
  flex-direction: row; /* valor por defecto, trabajan en fila*/
  flex-direction: row-reverse;
  /*Define el eje principal (main axis) row -x column -y
    row | row-reverse | column |column-reverse */
  flex-wrap: wrap-reverse;
  /* Define si la caja flexbox rnvuelve o No los hijos
    nowrap | wrap | wrap-reverse */

  flex-wrap: nowrap; /* default, Todos sus hijos se alinean en un fila */
  flex-wrap: wrap; /* Envuelve a sus contenedores hijos, va a considerar el tamaño de cada uno de sus elementos hijos, y si no logran caber en una sola línea, entonces generara varias filas.*/
  flex-wrap: wrap;
  flex-wrap: wrap-reverse;
  flex-flow: column wrap; /*Es un shorcut de flex-direction y flex-wrap*/
  flex-flow: row nowrap;
  flex-flow: column nowrap;

  justify-content: flex-start; /* (Default) flex-start | center | flex-end | space-between | space-around | space-evenly |
    
    justify-content define la alinación de los elementos hijos, repecto del eje principal,  pero el que determina cual es el eje principal es flex-direction
    
    Esta propiedad va aplicar dependiendo del espacio del contenedor padre*/

  justify-content: end;
  justify-content: center;
  justify-content: space-between;
  justify-content: space-around;
  justify-content: flex-start;

  align-items: stretch;
  /* Define la alinación de los hijos en el eje transversal (cross axis), dentro de cada línea.
    stretch || flex-start | flex-end | center | baseline
    */

  align-content: stretch; /* Define la alinación de los hijos en el eje transversal (croos axis), NO funciona cuando los hijos están en una sola línea (cuando flex:wrap: nowrap NO FUNCIONA).
    flex-start | flex-end | center | space-between | space-around | space-evenly | stretch */

  display: flex;
  flex-flow: row nowrap;
  justify-content: flex-start;
  align-items: stretch;
  align-content: flex-start;
}

.item {
  border: medium solid #999;
  /* width: 20%; */
  /* height: 20%; */
  background-color: rgba(0, 144, 221, 0.2);
  /* Propiedades de hijos */
  flex-grow: 0;
  /*Cuando la caja tenga espacio sobrante, es la habilidad o el factor de crecer, valor por defecto 0, No aceptan valores negativos */
  flex-shrink: 1;
  /*Cuando la caja No tenga espacio sobrante, es la habilidad o el factor de encongerse, valor por defecto es 1, No se aceptan valores negativos.  */
  flex-basis: auto;
  flex-basis: 100px;
  /* Es el tamaño del elemento hijo dentro de la línea de la caja flexbox 
    Si la caja flexbox tiene dirección de fila, flex-basis representa el width
    Si la caja tiene dirección de columna, flex-basis representa el height 
    Valor por defecto auto */
  flex: 1 1 auto;
  /* Es un shorhand de las propiedades flex-grow, flex-shrink y flex-basis, en ese orden. */
  order: 0;
  /* Representa el orden que tendrán los elementos hijos en la caja flexbox 
    Valor por defecto 0
    Se aceptan valores positivos y negativos
    Un valor menor siempre irá antes que un valor mayor*/
  align-self: stretch;
  /* stretch 1 flex-start | flex-end | center | baseline 
    Sobreescribe el valor de la propiedad  alig-items sólo para el elemnto hijo especificado */
}

.item:nth-child(2) {
  /* flex-grow: 0;  */
  /* flex-shrink: 2; */
  order: -1;
}

.item:nth-child(3) {
  /* flex-grow: 0;  */
  align-self: center;
}

/* .item:nth-child(2),
.item:nth-child(17) {
    font-size: 250%;
} */

/* Propiedades de hijos */

/*Ejemplos Flexbox*/

body {
  display: flex;
  flex-direction: column;
  min-height: 100vh;
}

img {
    max-width: 100%;
    height: auto;
}

.menu-ul {
  list-style: none;
  
}

.menu a{
    color: #fff;
}

main {
  background-color: #fff;
  flex-grow: 1;
}

.titulares {
  background-color: #222;
  color: #eee;
  padding: 1rem;
}

.header-2 {
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
}

.hero-image {
  min-height: 100vh;
  background-image: url("https://4kwallpapers.com/images/wallpapers/blue-sky-half-moon-crescent-moon-clouds-star-trails-5k-3840x2160-8404.png");
  background-repeat: no-repeat;
  color: #fff;
}

.hero-image div {
  min-height: inherit;
  display: flex;
  justify-content: center;
  align-items: center;
  text-align: center;
  background-color: rgba(0, 0, 0, 0.75);
}


.hero-image h1 {
  font-size: 5vw;
}

.flex-responsive {
 display: flex;
 flex-flow: row wrap;
}

.flex-responsive-item {
    border: thin solid #f60;
 flex: 1 1 200px;
}

@media screen and (min-width: 1024px) {
  .header-2 {
    display: flex;
    flex-direction: row;
    justify-content: space-around;
  }



  .menu ul {
    display: flex;
  }

  .menu li {
    padding: 0.5rem;
  }

  .menu a {
    margin: 1rem;
  }
  .flex-container {
      display: flex;
      align-items: center;
  }
  
  .flex-item {
      flex-basis: 0 1 50%;
  }

  /* .flex-order-1 {
    order: 1;
  } */

  .flex-row-reverse {
    flex-direction: row-reverse;
  }
}



