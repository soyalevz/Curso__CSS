/*
Comentario en CSS
Regla CSS consta de 2 partes
   1) El selector
   2)Bloque de declaraciones: { 
      atributo: valor;
      atributo-de-mas-dos-palabras: otro-valor;
   }
*/

/*Mandar a llamar una hoja de estilo a otra, pero es mala pr√°ctica son bloqueantes a la hora que el navegador lee esta instrucci√≥n*/
@import url("otra-hoja.css");

h1 {
  color: orangered;
  background-color: #000;
  display: flex;
  align-items: center;
  justify-content: center;
}

/*Enlaces de referencia
    1) w3c
    2) MDN web docs
    3) cssreference.io
    4) Can i use 
    5) code guide 
*/

/* Selectores B√°sicos
  1) Etiquetas  - son elementos html
  2) Identificadores - atributo id - #
  3) Clases - atributo class .
*/

p {
  color: midnightblue;
}

/* Dar estilos con ID se considera un AntiPatr√≥n o sea mala practica */
#parrafo-dos {
  background-color: skyblue;
}

/* Dar estilos con clases nos permite reutilizar nuestro c√≥digo CSS */

.text-20 {
  font-size: 20px;
}

.text-32 {
  font-size: 32px;
}

.bg-skyblue {
  background-color: skyblue;
}

.bg-steelblue {
  background-color: steelblue;
}

.text-white {
  color: white;
}

/* Hijos directos para aplicar estilos se usa > */

.hijos-directos > li {
  background-color: thistle;
}

/* Selector de hijos descientes para aplicar estilos es un espacio en blanco */

.hijos-descendientes b {
  background-color: thistle;
}

/* Los selectores de hermanos van a aplicar a los elementos que son hermanos y que est√©n por debajo del elemento de referencia */

.hermanos-general ~ li {
  background-color: thistle;
}

.hermanos-adyasente + li {
  background-color: thistle;
}

/* Selectores de atributos */
.selectores-atributos a[href] {
  color: orangered;
}

.selectores-atributos a[target="_blank"] {
  font-weight: bold;
}

/* El comod√≠n del * aplica el estilo si contiene el texto en cuesti√≥n en cualquier parte */
.selectores-atributos a[href*="jonmircha"] {
  font-size: 24px;
}

/* El comod√≠n del ^ aplica el estilo si contiene el texto en cuesti√≥n al inicio */
.selectores-atributos a[href^="http:"] {
  text-decoration: none;
}

/* El comod√≠n del $ aplica el estilo si contiene el texto en cuesti√≥n al final */
.selectores-atributos a[href$=".com"] {
  background-color: black;
}

/* El comod√≠n del ~ aplica el estilo si contiene el texto en cuesti√≥n en una lista separada por espacios */
.selectores-atributos a[class~="cursos"] {
  background-color: midnightblue;
}

/* El comod√≠n del | aplica el estilo si contiene el texto en cuesti√≥n en una lista separada por espacios y que despues del texto en cuesti√≥n venga un gui√≥n medio - */
.selectores-atributos a[class|="menu"] {
  font-style: italic;
}

/* Selector universal */

* {
  font-family: sans-serif;
}

.selector-universal * {
  font-size: 24px;
}

/*
  Pseudoclases - Dan estilos dependiendo del contexto, posici√≥n o estado del elemento
*/

/* Pseudoclases de estados */
.form-pseudoclases *:required {
  border-color: yellow;
}

.form-pseudoclases *:valid {
  border-color: green;
}

.form-pseudoclases *:invalid {
  border-color: red;
}

.form-pseudoclases *:focus {
  background-color: skyblue;
}

.form-pseudoclases *:disabled {
  background-color: pink;
}

.menu-pseudoclases a:visited {
  color: olive;
}
.menu-pseudoclases a:hover {
  color: orange;
}

.p-pseudoclases:hover {
  font-size: 20px;
}

#temario-css:target {
  background-color: lightgreen;
}

/* Pseudoclases por posici√≥n y tipo */

.lista-pseudoclases li:first-child {
  /*Aplica para el primer elementos*/
  color: green;
}

.lista-pseudoclases li:last-child {
  /*Aplica para el ultimo elemento*/
  color: violet;
}

.lista-pseudoclases li:nth-child(3) {
  /*Aplica para el elemento que decidamos asignar*/
  color: navy;
}

.lista-pseudoclases li:nth-child(4n) {
  /*La orden 4n le indica que aplique estilos de 4 en 4*/
  font-size: 20px;
}

.lista-pseudoclases li:nth-child(3n + 1) {
  /*Aqu√≠ le indicaria que se corriera de 3 en 1*/
  font-weight: bold;
}

.lista-pseudoclases li:nth-child(even) {
  /*Aqu√≠ aplica a los elementos pares*/
  background-color: yellow;
}

.lista-pseudoclases li:nth-child(odd) {
  /*Aqu√≠ aplica a los elementos inpares*/
  background-color: orange;
}

/*Pseudoclases dependiendo del tipo*/
.articulo-pseudoclases p:first-of-type {
  background-color: pink;
}

.articulo-pseudoclases p:last-of-type {
  background-color: pink;
}

.articulo-pseudoclases p:nth-of-type(3) {
  background-color: fuchsia;
}

.articulo-pseudoclases *:not(p) {
  /*Aplica los estilos excepto a los que estan entre parentesis*/
  background-color: beige;
}

/* Pseudoelementos
 Dan estilos a partes especificas de un elemento, se usa el :: para diferenciarlos de los pseudoelementos
*/

.saga-geminis::before {
  content: "üë©‚Äçüë¶";
}

.saga-geminis::after {
  content: "‚ôäÔ∏è";
}

.saga-precio::before {
  content: "$";
  font-weight: bold;
}

.saga-precio::after {
  content: "USD";
  font-weight: bold;
}

.p-pseudoelementos::first-letter {
  /*Hace referenc√≠a a la primera letra*/
  font-weight: bold;
  font-size: 32px;
}

.p-pseudoelementos::first-line {
  /*Hace referenc√≠a a la primera l√≠nea*/
  color: coral;
}

.p-pseudoelementos::selection {
  /*Hace referenc√≠a al color al seleccionar un parrafo*/
  color: greenyellow;
  background-color: #000;
}

.input-pseudoelementos::placeholder {
  /* Permite cambiar el tipo de color del placeholder */
  color: green;
}

/* Agrupar Selectores */

.form-agrupar-selectores input[type="text"],
.form-agrupar-selectores input[type="email"],
.form-agrupar-selectores textarea {
  border-color: yellow;
  border-width: 2px;
  border-style: dashed;
  background-color: black;
  font-size: 20px;
  display: block;
  width: 300px;
}

/* El Algoritmo de CSS */

/*
  
  El Algoritmo de CSS: Es la forma en que el navegador aplica los estilos al documento HMTL. Es vital eentender este concepto para que entienda como se aplican y en algunas ocasiones se sobreescriben las regals CSS.

  1) La C√°scada
  2) La Especificidad
  3) La Herencia
  

  La C√°scada es el mecanismo en que el navegador aplica los estilos. Y toma en cuenta lo siguiente en este orden: 
  1) El Origen del C√≥digo:
    -El User Agent (los estilos por defecto del navegador)
    - Personalizaciones del usuario.
    - Los estilos del autor.
    
    2) La especificidad del selector
    3) Orden de aparici√≥n


 La Especificidad es el peso que tiene un selector cuando hay conflicto de estilos, Se calcula de la siguiente forma: 
  Etiquetas y pseudoelementos ------- 0,0,0,1
  Clases, atributos y pseudoclases ---- 0,0,1,0
  Identificadores ---------------------0,1,0,0
  Estilos en l√≠nea ------------------- 1,0,0,0
 !important ------------- Rompe la especificidad 

 La Herencia, es la capacidad de un selector de obtener (heredar) los valores de sus ancestros m√°s cercanos, para aplicarla se usa el valor inherit, si queremos evitarla podemos asignar otro valor o inicializar la propiedad en cuesti√≥n con el valor initial.

 
  */

  blockquote#cita-marco.cita-marco {
    background-color: lightskyblue;
  }

  blockquote {
    background-color: burlywood;
  }


 #cita-marco {
  background-color: lightgreen;
 }
 
 blockquote.cita-marco {
  background-color: tomato;
 }

  .cita-marco {
    background-color: cornflowerblue;
  } 


 .cita-marco {
  background-color: mediumaquamarine !important;
 }

  blockquote#cita-marco {
    background-color: lightsalmon;
  }

  .cita-marco {
    background-color: moccasin !important;
    font-size: 32px;
    border-style: dotted;
    border-color: orangered;
  }

  .cita-marco cite {
    background-color: pink;
    background-color: inherit;
    font-size: 24px;
    font-size: initial;
    border-style: inherit;
    border-color: inherit;
  }

  /* 
  https://autoprefixer.github.io/
  https://caniuse.com/
  
  Prefijos de los navegadors
  -webkit-user-select: noen;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  
  */
